using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.IO.Compression;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Security.Policy;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Windows.Forms;
using static DM.SEND130;
using static System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel;
//using RestSharp;

namespace DM
{
    public partial class SEND130 : Form
    {
    
        public SEND130()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, EventArgs e)
        {

            Main();
    
        }

        public static async Task Main()
        {
            string baseAddress = "https://daotaoegw.baohiemxahoi.gov.vn/";
            string username = "86001_BV";
            string password = "e10adc3949ba59abbe56e057f20f883e";
            string Urlfile = @"D:\\xml130.xml";
            string base64String = null;
           string fileusername64String = "";
           
            // dẩy thành công 
            //  string fileusername64String = "";

            FileInfo f = new FileInfo(Urlfile);

            // Create a HttpClient instance
            using (HttpClient client = new HttpClient())
            {
                // Set the base address
                client.BaseAddress = new Uri(baseAddress);

                // Clear the default headers and set Accept header
                client.DefaultRequestHeaders.Accept.Clear();
                client.DefaultRequestHeaders.Accept.Add(new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue("application/json"));

                // Create a dictionary for the request data

                var requestData = new Dictionary<string, string>
            {
                { "username", username },
                { "password", password }
            };

                // Serialize the request data to JSON
              //  string jsonRequestData = JsonConvert.SerializeObject(requestData);

                // Create StringContent with JSON data
               // var content = new StringContent(jsonRequestData, System.Text.Encoding.UTF8, "application/x-www-form-urlencoded");

                try
                {
                    // Send the POST request and get the response
                    HttpResponseMessage response = await client.PostAsync("api/token/take", new FormUrlEncodedContent(requestData));

                    // Check if the response is successful
                    if (response.IsSuccessStatusCode)
                    {
                        // Read the response content as a string
                        KQPhienLamViec kq = await response.Content.ReadAsAsync<KQPhienLamViec>();
                       

                        // Deserialize the response JSON if needed
                        // var apiToken = JsonConvert.DeserializeObject<ApiToken>(responseContent);

                        // Handle the API token or response content as needed
                        Console.WriteLine("Response: " + kq);
                        var ApiKey = kq.APIKey;
                        byte[] buffe = null;
                        using(FileStream fs=f.OpenRead())
                        {
                            using (var memoryStream = new MemoryStream())
                            {
                                fs.CopyTo(memoryStream);
                                buffe = memoryStream.ToArray();
                                base64String = Convert.ToBase64String(buffe);
                                // nén base 64
                                byte[] dataBytes = Encoding.UTF8.GetBytes(base64String);
                                using (MemoryStream compressedStream = new MemoryStream())
                                {
                                    using (GZipStream gzipStream = new GZipStream(compressedStream, CompressionMode.Compress))
                                    {
                                        gzipStream.Write(dataBytes, 0, dataBytes.Length);
                                    }
                                    byte[] compressedData = compressedStream.ToArray();

                                    // Chuyển dữ liệu nén sang chuỗi Base64
                                    string base64CompressedData = Convert.ToBase64String(compressedData);

                                    //Chia dữ liệu base64 thành các phần nhỏ (ví dụ: 1MB mỗi phần)
                                    int chunkSize = 1024 * 1024; // 1MB

                                    for (int i = 0; i < fileusername64String.Length; i += chunkSize)
                                    {
                                        string chunk = fileusername64String.Substring(i, Math.Min(chunkSize, fileusername64String.Length - i));

                                        using (HttpClient httpClient = new HttpClient())
                                        {


                                            // Thêm tiêu đề "Content-Type" vào yêu cầu

                                            httpClient.DefaultRequestHeaders.Accept.Clear();
                                            httpClient.DefaultRequestHeaders.Accept.Add(new System.Net.Http.Headers.MediaTypeWithQualityHeaderValue("application/x-www-form-urlencoded"));
                                            httpClient.DefaultRequestHeaders.Add("accessToken", ApiKey.access_token);
                                            httpClient.DefaultRequestHeaders.Add("tokenId", ApiKey.id_token);
                                            httpClient.DefaultRequestHeaders.Add("passwordHash", password);


                                            byte[] dataBytesToSend = Convert.FromBase64String(fileusername64String);
                                            var datanew = new ByteArrayContent(dataBytesToSend);


                                            var contents = new FormUrlEncodedContent(new[]
                                                 {

                                        new KeyValuePair<string, string>("username", username),
                                            new KeyValuePair<string, string>("loaiHoSo", "130"),
                                            new KeyValuePair<string, string>("maTinh", "86"),
                                            new KeyValuePair<string, string>("maCSKCB", "86001"),
                                            new KeyValuePair<string, string>("fileHSBase64", chunk),
                                            new KeyValuePair<string, string>("chukydonvi", "")
                                        }); ;

                                            HttpResponseMessage response2 = httpClient.PostAsync("https://daotaoegw.baohiemxahoi.gov.vn/api/qd130/guiHoSoXmlQD130",
                                               contents).GetAwaiter().GetResult();
                                            //   HttpResponseMessage response2 = await httpClient.PostAsync("https://daotaoegw.baohiemxahoi.gov.vn/api/qd130/checkInKcbQd130", contents);

                                            if (response2.IsSuccessStatusCode)
                                            {
                                                ResponseQd130 responseQd130 = response2.Content.ReadAsAsync<ResponseQd130>().Result;
                                            }
                                        }
                                    }
                                    // Gửi base64CompressedData trong yêu cầu HTTP bằng   HttpClient
                                 

                                }
                            }
                        }
                        //string data = "accessToken=" + Uri.EscapeDataString(ApiKey.access_token) +
                        //     "&tokenId=" + Uri.EscapeDataString(ApiKey.id_token) +
                        //         "&passwordHash=" + Uri.EscapeDataString(password);
                       
                    
                       // string data3 = string.Format("username={0}&loaiHoSo={1}&maTinh={2}&maCSKCB={3}&fileHSBase64={4}&chukydonvi={5}",
                       //   username, 130, 86, 86001, base64String,"");
                        //  var contents = new StringContent(data3, System.Text.Encoding.UTF8, "application/x-www-form-urlencoded");

                    }
                    else
                    {
                       
                    }
                }
                catch (Exception ex)
                {
                    Console.WriteLine("An error occurred: " + ex.Message);
                }
            }

          

    }
      
        public class ApiToken
        {

            public string username { get; set; }

            public string password { get; set; }
        }
        public class KQPhienLamViec
        {
            public string maketQua { get; set; }
            public ApiKey APIKey { get; set; }
        }
        public class ApiKey
        {

            public string access_token { get; set; }

            public string id_token { get; set; }

            public string token_type { get; set; }

        }


        public class Json
        {

            public string username { get; set; }

            public string loaiHoSo { get; set; }
            public string maTinh { get; set; }
            public string maCSKCB { get; set; }

            public string fileHSBase64 { get; set; }
            public string chukydonvi { get; set; }

        }
        public class ResponseQd130
        {
            public string maKetQua { get; set; }
            public string maGiaoDich { get; set; }
            public string thongDiep { get; set; }
            public string thoiGianTiepNhan { get; set; }

        }
    }
}